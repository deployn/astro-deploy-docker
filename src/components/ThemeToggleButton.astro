<button
  id="themeToggleBtn"
  aria-label="Toggle dark mode"
  class="p-2 rounded-md hover:bg-gray-200 dark:hover:bg-gray-700"
>
  <svg
    id="themeIconLight"
    xmlns="http://www.w3.org/2000/svg"
    class="h-6 w-6 hidden dark:inline"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    ></path>
  </svg>
  <svg
    id="themeIconDark"
    xmlns="http://www.w3.org/2000/svg"
    class="h-6 w-6 dark:hidden"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    ></path>
  </svg>
</button>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  const applyTheme = (theme) => {
    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }
  };

  applyTheme(theme);

  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("themeToggleBtn");

    const updateIcons = (currentTheme) => {
      const lightIcon = document.getElementById("themeIconLight");
      const darkIcon = document.getElementById("themeIconDark");
      if (lightIcon && darkIcon) {
        if (currentTheme === "dark") {
          lightIcon.style.display = "inline";
          darkIcon.style.display = "none";
        } else {
          lightIcon.style.display = "none";
          darkIcon.style.display = "inline";
        }
      }
    };

    updateIcons(
      document.documentElement.classList.contains("dark") ? "dark" : "light"
    );

    toggleBtn?.addEventListener("click", () => {
      let currentTheme = document.documentElement.classList.contains("dark")
        ? "dark"
        : "light";
      const newTheme = currentTheme === "light" ? "dark" : "light";
      localStorage.setItem("theme", newTheme);
      applyTheme(newTheme);
      updateIcons(newTheme);
    });
  });
</script>
